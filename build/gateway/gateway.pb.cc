// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gateway.proto

#include "gateway.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace XuChat {
PROTOBUF_CONSTEXPR ClientAuthenticationReq::ClientAuthenticationReq(
    ::_pbi::ConstantInitialized)
  : request_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , session_id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct ClientAuthenticationReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientAuthenticationReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientAuthenticationReqDefaultTypeInternal() {}
  union {
    ClientAuthenticationReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientAuthenticationReqDefaultTypeInternal _ClientAuthenticationReq_default_instance_;
}  // namespace XuChat
static ::_pb::Metadata file_level_metadata_gateway_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_gateway_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_gateway_2eproto = nullptr;

const uint32_t TableStruct_gateway_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XuChat::ClientAuthenticationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XuChat::ClientAuthenticationReq, request_id_),
  PROTOBUF_FIELD_OFFSET(::XuChat::ClientAuthenticationReq, session_id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::XuChat::ClientAuthenticationReq)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::XuChat::_ClientAuthenticationReq_default_instance_._instance,
};

const char descriptor_table_protodef_gateway_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rgateway.proto\022\006XuChat\"A\n\027ClientAuthent"
  "icationReq\022\022\n\nrequest_id\030\001 \001(\t\022\022\n\nsessio"
  "n_id\030\002 \001(\tB\003\200\001\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_gateway_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_gateway_2eproto = {
    false, false, 103, descriptor_table_protodef_gateway_2eproto,
    "gateway.proto",
    &descriptor_table_gateway_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_gateway_2eproto::offsets,
    file_level_metadata_gateway_2eproto, file_level_enum_descriptors_gateway_2eproto,
    file_level_service_descriptors_gateway_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_gateway_2eproto_getter() {
  return &descriptor_table_gateway_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_gateway_2eproto(&descriptor_table_gateway_2eproto);
namespace XuChat {

// ===================================================================

class ClientAuthenticationReq::_Internal {
 public:
};

ClientAuthenticationReq::ClientAuthenticationReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:XuChat.ClientAuthenticationReq)
}
ClientAuthenticationReq::ClientAuthenticationReq(const ClientAuthenticationReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  request_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    request_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_request_id().empty()) {
    request_id_.Set(from._internal_request_id(), 
      GetArenaForAllocation());
  }
  session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_session_id().empty()) {
    session_id_.Set(from._internal_session_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:XuChat.ClientAuthenticationReq)
}

inline void ClientAuthenticationReq::SharedCtor() {
request_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  request_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
session_id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  session_id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ClientAuthenticationReq::~ClientAuthenticationReq() {
  // @@protoc_insertion_point(destructor:XuChat.ClientAuthenticationReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ClientAuthenticationReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  request_id_.Destroy();
  session_id_.Destroy();
}

void ClientAuthenticationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClientAuthenticationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XuChat.ClientAuthenticationReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmpty();
  session_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientAuthenticationReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_request_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "XuChat.ClientAuthenticationReq.request_id"));
        } else
          goto handle_unusual;
        continue;
      // string session_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_session_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "XuChat.ClientAuthenticationReq.session_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ClientAuthenticationReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XuChat.ClientAuthenticationReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (!this->_internal_request_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_request_id().data(), static_cast<int>(this->_internal_request_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XuChat.ClientAuthenticationReq.request_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_request_id(), target);
  }

  // string session_id = 2;
  if (!this->_internal_session_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XuChat.ClientAuthenticationReq.session_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XuChat.ClientAuthenticationReq)
  return target;
}

size_t ClientAuthenticationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XuChat.ClientAuthenticationReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string request_id = 1;
  if (!this->_internal_request_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_request_id());
  }

  // string session_id = 2;
  if (!this->_internal_session_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ClientAuthenticationReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ClientAuthenticationReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ClientAuthenticationReq::GetClassData() const { return &_class_data_; }

void ClientAuthenticationReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ClientAuthenticationReq *>(to)->MergeFrom(
      static_cast<const ClientAuthenticationReq &>(from));
}


void ClientAuthenticationReq::MergeFrom(const ClientAuthenticationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XuChat.ClientAuthenticationReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_id().empty()) {
    _internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_session_id().empty()) {
    _internal_set_session_id(from._internal_session_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ClientAuthenticationReq::CopyFrom(const ClientAuthenticationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XuChat.ClientAuthenticationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientAuthenticationReq::IsInitialized() const {
  return true;
}

void ClientAuthenticationReq::InternalSwap(ClientAuthenticationReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &request_id_, lhs_arena,
      &other->request_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &session_id_, lhs_arena,
      &other->session_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientAuthenticationReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_gateway_2eproto_getter, &descriptor_table_gateway_2eproto_once,
      file_level_metadata_gateway_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace XuChat
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::XuChat::ClientAuthenticationReq*
Arena::CreateMaybeMessage< ::XuChat::ClientAuthenticationReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XuChat::ClientAuthenticationReq >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
